#!/usr/bin/env python3
import argparse
import os
import sys

import numpy as np
from matplotlib import pyplot as plt

from MICE2_mocks.plotting import hist_step_filled, subplot_grid
from table_tools import load_table


if __name__ == "__main__":
    plt.switch_backend("agg")

    parser = argparse.ArgumentParser(
        description='Plot histograms of spectroscopic redshifts.')

    parser.add_argument(
        '--fig-scale', type=float, default=1.0,
        help='scaling factor for image size (default: %(default)s)')
    parser.add_argument(
        '--o-format', default='png',
        help='format of plots (matplotlib supported image format, '
             'default: %(default)s)')

    sim_group = parser.add_argument_group('simulation')
    sim_group.add_argument(
        '-s', '--simulated', required=True,
        help='file path of the simulation table')
    sim_group.add_argument(
        '--s-format', default='fits',
        help='astropy.table format specifier of the simulation table')

    data_group = parser.add_argument_group('data')
    data_group.add_argument(
        '-d', '--data',
        help='file path of the data table')
    data_group.add_argument(
        '--d-format', default='fits',
        help='astropy.table format specifier of the data table')
    data_group.add_argument(
        '--d-z-spec',
        help='column name of spectroscopic redshifts in data table')
    data_group.add_argument(
        '--d-label',
        help='label indicating data in legend')

    args = parser.parse_args()

    # get simulation data
    columns = ["z_cgal_v", "lmhalo", "lmstellar", "flag_central"]
    simul = load_table(args.simulated, args.s_format, columns)
    # get real data
    if args.data is not None:
        if args.d_z_spec is None:
            sys.exit("if --data is given, --d-z-spec is requried")
        data = load_table(args.data, args.d_format, [args.d_z_spec])
    else:
        data = None

    print("plot spec-z distribution")
    bins = np.linspace(0.0, 1.5, 50)
    fig, axes = subplot_grid(1, 1, scale=args.fig_scale)
    ax = axes[0, 0]
    if data is not None:
        hist_step_filled(
            data[args.d_z_spec], bins, "C3",
            label=args.d_label, ax=ax, normed=False)
    hist_step_filled(
        simul["z_cgal_v"], bins, "C0",
        label="simulation", ax=ax, normed=False)
    # add labels
    ax.set_xlim(0.0, bins[-1])
    ax.set_ylim(bottom=0.0)
    ax.set_xlabel("spectroscopic redshift")
    ax.set_ylabel("frequency")
    ax.grid(alpha=0.25)
    ax.legend(loc="upper right", prop={"size": 8})
    # finalize the plot
    plt.tight_layout(h_pad=0.0, w_pad=0.0)
    plt.savefig(
        os.path.splitext(args.simulated)[0] + "." + args.o_format)
    plt.close(fig)
