#!/usr/bin/env python3
import argparse
import os
import sys

import numpy as np
from matplotlib import pyplot as plt

from MICE2_mocks.plotting import get_plotting_folder, histogram_per_filter
from table_tools import load_table


if __name__ == "__main__":
    plt.switch_backend("agg")

    parser = argparse.ArgumentParser(
        description='Create check plots for data created with '
                    '"mocks_extended_object_sn"')

    parser.add_argument(
        '-i', '--input', required=True, help='file path of input data table')
    parser.add_argument(
        '--i-format', default='fits',
        help='astropy.table format specifier of the input table '
             '(default: %(default)s)')
    parser.add_argument(
        '--filters', nargs='*', required=True, help='filter names to plot')
    parser.add_argument(
        '--fig-scale', type=float, default=1.0,
        help='scaling factor for image size (default: %(default)s)')
    parser.add_argument(
        '--o-format', default='png',
        help='format of plots (matplotlib supported image format, '
             'default: %(default)s)')
    args = parser.parse_args()

    data = load_table(args.input, args.i_format)

    plot_dir = get_plotting_folder(args.input)

    area = data["aper_area_intr"]
    major_axis = data["aper_a_intr"]
    minor_axis = area / (np.pi * major_axis)
    ba_intrinsic = minor_axis / major_axis

    print("plot aperture size distribution")
    keys = ["aper_a_%s" % f for f in args.filters]
    fig = histogram_per_filter(
        major_axis, "intrinsic",
        data[keys], [k[7:] for k in keys],
        bins=np.linspace(0.0, 3.0, 101), n_filters=len(args.filters),
        xlabel="aperture major axis / arcsec", label_pos="upper right",
        scale=args.fig_scale)
    plt.savefig(os.path.join(plot_dir, "aperture_major_axis." + args.o_format))
    plt.close(fig)

    print("plot aperture b/a ratio distribution")
    keys = ["aper_ba_ratio_%s" % f for f in args.filters]
    fig = histogram_per_filter(
        ba_intrinsic, "intrinsic",
        data[keys], [k[14:] for k in keys],
        bins=np.linspace(0.0, 1.0, 101), n_filters=len(args.filters),
        xlabel="aperture axis ratio b/a", label_pos="upper right",
        scale=args.fig_scale)
    plt.savefig(os.path.join(plot_dir, "aperture_ba_ratio." + args.o_format))
    plt.close(fig)

    print("plot aperture area distribution")
    keys = ["aper_area_%s" % f for f in args.filters]
    fig = histogram_per_filter(
        area, "intrinsic",
        data[keys], [k[10:] for k in keys],
        bins=np.linspace(0.0, 10.0, 101), n_filters=len(args.filters),
        xlabel=r"aperture area on sky / arcsec${}^2$", label_pos="upper right",
        scale=args.fig_scale)
    plt.savefig(os.path.join(plot_dir, "aperture_area." + args.o_format))
    plt.close(fig)

    print("plot S/N correction factor distribution")
    keys = ["sn_factor_%s" % f for f in args.filters]
    fig = histogram_per_filter(
        None, None,
        data[keys], [k[10:] for k in keys],
        bins=np.linspace(0.0, 1.0, 101), n_filters=len(args.filters),
        xlabel="S/N correction factor", label_pos="upper right",
        scale=args.fig_scale)
    plt.savefig(
        os.path.join(plot_dir, "aperture_sn_correction." + args.o_format))
    plt.close(fig)
