#!/usr/bin/env python3
import argparse

from mock_processing.jobs import apertures
from mock_processing.photometry import PhotometryParser


parser = argparse.ArgumentParser(
    description="Create a photometric apertures based on the intrisic galaxy "
                "and PSF sizes.",
    add_help=False)
parser.register("action", "dump", PhotometryParser.get_dump())

parser.add_argument(
    "datastore", help="directory in which the data store is located")

parser.add_argument(
    "--method", choices=("SExtractor", "GAaP"), default="SExtractor",
    help="photometry algorthim to apply (default: %(default)s)")
parser.add_argument(
    "-c", "--config", required=True,
    help="parameter file in TOML format that defines the properties of the "
         "photometry realisation and the method parameters (use --dump to "
         "obtain a default parameter file)")
parser.add_argument(
    "--threads", type=int, default=-1,
    help="maximum number of threads to use (default: all)")

help_group = parser.add_argument_group("help and documentation")
help_group.add_argument(
    "-h", "--help", action="help",
    help="show this help message and exit")
help_group.add_argument(
    "--dump", nargs=0, action="dump",
    help="dump a default photometry configuratin file to stdout and exit")


def main():
    args = parser.parse_args()
    apertures(**{name: getattr(args, name) for name in vars(args)})


if __name__ == "__main__":
    main()
