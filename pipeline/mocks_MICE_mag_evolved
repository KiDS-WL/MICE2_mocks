#!/usr/bin/env python3
import argparse
import logging
import os
import sys

import numpy as np

from h5table.memmap import BinaryTable
from MICE2_mocks import pipeline


def mag_correction(mag, redshift):
    """
    Evolution correction as described in the official MICE2 manual
    https://www.dropbox.com/s/0ffa8e7463n8h1q/README_MICECAT_v2.0_for_new_CosmoHub.pdf?dl=0

    Parameters
    ----------
    mag : array_like
        Uncorrected model magnitudes.
    redshift : array_like
        True galaxy redshift (z_cgal).

    Returns
    -------
    mag_evo : array_like
        Evolution corrected model magnitudes.
    """
    return mag - 0.8 * (np.arctan(1.5 * redshift) - 0.1489)


if __name__ == "__main__":

    parser = argparse.ArgumentParser(
        description='Apply the missing magnitude evolution correction to '
                    'MICE2.')
    parser.add_argument(
        'dataset', help='memory mapped table data set with MICE2 raw data')
    parser.add_argument(
        '-c', '--chunksize', type=int, default=10000,
        help='row chunk size to process at once (default: %(default)s)')
    args = parser.parse_args()

    logger = pipeline.pipe_logger(__file__)

    with BinaryTable(args.dataset, mode="r+") as table:

        # find redshift column
        z_path = "z_cgal"
        if z_path not in table:
            message = "redshift column {:} not found in data set"
            logger.error(message.format(z_path))
            raise KeyError(message.format(z_path))

        # find all magnitude columns
        mag_paths = []
        for col in table.colnames:
            if col.endswith("_true"):
                mag_paths.append(col)
        if len(mag_paths) == 0:
            message = "no magnitude columns found in data set"
            logger.error(message)
            raise KeyError(message)

        # apply the evolution correction
        for mag_path in mag_paths:
            logger.info(
                "applying evolution correction to '{:}'".format(mag_path))
            # create new output columns
            evo_path = mag_path.split("_true")[0] + "_evo"
            evos = table.add_column(
                evo_path, dtype=table[mag_path].dtype.str, attr={
                    "description": "evolution corrected model magnitude"})
            # compute the corrected magnitudes
            for start, end in table.row_iter(args.chunksize):
                mags = table[mag_path][start:end]
                redshifts = table[z_path][start:end]
                evos[start:end] = mag_correction(mags, redshifts)
