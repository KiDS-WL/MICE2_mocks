#!/usr/bin/env python3
import argparse
import os
import sys

import numpy as np
from astropy import units
from astropy.table import Column, Table
from data_table import load_table


def mag_correction(mag, redshift):
    return mag - 0.8 * (np.arctan(1.5 * redshift) - 0.1489)


if __name__ == "__main__":

    parser = argparse.ArgumentParser(
        description='Apply the MICE2 colour-redshift evolution correction.')
    parser.add_argument(
        '-i', '--input', required=True, help='file path of MICE2 data table')
    parser.add_argument(
        '--i-format', default='fits',
        help='astropy.table format specifier of the input table')
    parser.add_argument(
        '-o', '--output', required=True,
        help='file path of output table containing only the corrected colours')
    parser.add_argument(
        '--o-format', default='fits',
        help='astropy.table format specifier of the output table '
             '(default: %(default)s)')
    args = parser.parse_args()

    # check if all required columns exist
    z_col = "z_cgal"
    data = load_table(args.input, args.i_format, [z_col])
    mag_cols = [col for col in data.colnames if col.endswith("_true")]
    if len(mag_cols) == 0:
        sys.exit("ERROR: table does not contain any MICE2 magnitude columns")

    # collect data and apply correction
    z_data = data[z_col]
    table = Table()
    for filt in mag_cols:
        table[filt.split("_true")[0] + "_evo"] = Column(
            mag_correction(data[filt], z_data), unit=units.mag,
            description="evolution corrected model magnitude")

    # write to specified output path
    print("write table to: %s" % args.output)
    table.write(args.output, format=args.o_format, overwrite=True)
